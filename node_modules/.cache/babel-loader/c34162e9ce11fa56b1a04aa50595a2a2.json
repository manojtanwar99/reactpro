{"ast":null,"code":"var _jsxFileName = \"/Users/manojtanwar/Desktop/react-sxnilq/src/ui-component/cards/Carts.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport './card.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nexport default function Carts({\n  data\n}) {\n  // let { url } = useRouteMatch();\n  const [value, setValue] = useState(\"\");\n  const [loader, setloader] = useState(false);\n  const [cardsArr, setcardsArr] = useState([]);\n  let results = [];\n  useEffect(() => throttled.current(value), [value]);\n  const throttled = useRef(throttle((newValue = \"a\") => {\n    if (newValue) {\n      getDataByFilter(newValue);\n    }\n  }, 3000));\n\n  function getDataByFilter(value) {\n    setloader(true);\n\n    if (localStorage.getItem(\"actors\") && value === \"a\") {\n      setcardsArr(JSON.parse(localStorage.getItem(\"actors\")));\n      setloader(false);\n      return;\n    }\n\n    fetch('api/3070399882980494/search/' + value).then(function (response) {\n      return response.json().then(function (response) {\n        if (response.results && response.results.length > 0) {\n          results = response.results.map(item => {\n            return { ...item.image,\n              ...item.biography\n            };\n          });\n\n          if (value === \"a\") {\n            localStorage.setItem(\"actors\", JSON.stringify(results));\n          }\n\n          setcardsArr(results);\n          setloader(false);\n        }\n      });\n    });\n  }\n\n  useEffect(() => {\n    getDataByFilter(\"a\");\n  }, []);\n  let fullName = data[\"full-name\"];\n  let birthPlace = data[\"place-of-birth\"];\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: \"actors/1\",\n      state: {\n        fromNavBar: true\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group has-success has-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-sm-2 control-label\",\n    for: \"inputSuccess\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"inputSuccess\",\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"glyphicon glyphicon-ok form-control-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), !loader ? cardsArr.map(data => /*#__PURE__*/React.createElement(Carts, {\n    id: item.id,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 43\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 79\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: '18rem',\n      margin: \"10px\",\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, data.url ? /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: data.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: \"https://www.superherodb.com/pictures2/portraits/10/100/1508.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 75\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  }, data.name), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }\n  }, fullName, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }\n  }), birthPlace, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }), data.publisher), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }\n  }, \"More Details\")))));\n}","map":{"version":3,"sources":["/Users/manojtanwar/Desktop/react-sxnilq/src/ui-component/cards/Carts.js"],"names":["React","useState","useEffect","useRef","Card","Button","BrowserRouter","Router","Link","Carts","data","value","setValue","loader","setloader","cardsArr","setcardsArr","results","throttled","current","throttle","newValue","getDataByFilter","localStorage","getItem","JSON","parse","fetch","then","response","json","length","map","item","image","biography","setItem","stringify","fullName","birthPlace","pathname","state","fromNavBar","e","target","id","width","margin","display","url","name","publisher"],"mappings":"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","sourcesContent":["\n\n\nimport React ,{ useState, useEffect, useRef } from 'react';\nimport  './card.css'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport {\n  BrowserRouter as Router,\n  Link,\n  \n} from \"react-router-dom\";\n\n\nexport default function Carts({data}) {\n // let { url } = useRouteMatch();\n\n\n  const [ value, setValue] = useState(\"\")\n  const [loader, setloader] = useState(false)\n  const [cardsArr, setcardsArr] = useState([])\n  let results = []\n\n  useEffect(() => throttled.current(value), [value]);\n\n  const throttled = useRef(throttle((newValue = \"a\") => {\n    if (newValue) {\n      getDataByFilter(newValue)\n    }\n\n  }, 3000));\n\n  function getDataByFilter(value) {\n\n    setloader(true)\n    if (localStorage.getItem(\"actors\") && value === \"a\") {\n\n      setcardsArr(JSON.parse(localStorage.getItem(\"actors\")))\n      setloader(false)\n      return\n    }\n\n    fetch('api/3070399882980494/search/' + value).then(function (response) {\n      return response.json().then(function (response) {\n\n        if (response.results && response.results.length > 0) {\n\n          results = response.results.map((item) => { return { ...item.image, ...item.biography } });\n\n          if (value === \"a\") {\n            localStorage.setItem(\"actors\", JSON.stringify(results))\n          }\n          setcardsArr(results)\n          setloader(false)\n        }\n\n      })\n    });\n  }\n\n  useEffect(() => { getDataByFilter(\"a\") }, []);\n  \n\n  \n    \n  \n \n\n  let fullName = data[\"full-name\"];\n  let birthPlace=data[\"place-of-birth\"]\n  \n  return (\n \n  <Router>\n\n    <Link  to={{\n                                pathname: \"actors/1\",\n                                state: {\n                                    fromNavBar: true\n                                }\n                            }} >\n\n\n<div className=\"form-group has-success has-feedback\">\n      <label className=\"col-sm-2 control-label\" for=\"inputSuccess\">Search</label>\n          <div className=\"col-sm-12\">\n            <input type=\"text\" className=\"form-control\" id=\"inputSuccess\" onChange={(e) => setValue(e.target.value)} />\n            <span className=\"glyphicon glyphicon-ok form-control-feedback\"></span>\n          </div>\n\n          {!loader ? cardsArr.map((data)=><Carts id={item.id} data={data} />):<div className=\"loader\"></div>}\n\n          \n    </div>\n\n            <Card  style={{ width: '18rem',margin:\"10px\",display:\"inline-block\"}}>\n                \n                    {data.url ?<Card.Img variant=\"top\"  src={data.url} />:<Card.Img variant=\"top\"  src=\"https://www.superherodb.com/pictures2/portraits/10/100/1508.jpg\" />}\n                    <Card.Body>\n                      <Card.Title>{data.name}</Card.Title>\n                      <Card.Text>\n                        {fullName}\n                      <br></br>\n                        {birthPlace}\n                        <br></br>\n                      {data.publisher}\n                      \n                    </Card.Text>\n                      <Button variant=\"primary\" >More Details</Button>\n                    </Card.Body>\n                  </Card>\n        </Link>\n   \n    \n      </Router>\n    )\n\n\n       \n\n\n    \n}"]},"metadata":{},"sourceType":"module"}