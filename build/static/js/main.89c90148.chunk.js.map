{"version":3,"sources":["ui-component/cards/details.js","ui-component/cards/Carts.js","index.js"],"names":["Details","props","detailsInfo","data","filter","item","id","toString","match","params","Card","style","width","margin","display","this","url","Img","variant","src","Body","Title","name","Text","publisher","React","Component","Carts","total","useState","value","setValue","orignalActorArr","setorignalActorArr","loader","setloader","cardsArr","setcardsArr","results","actorArr","setResposneData","start","end","splice","useEffect","throttled","current","useRef","throttle","newValue","getDataByFilter","localStorage","getItem","result","JSON","parse","fetch","then","response","json","length","map","i","image","biography","setItem","stringify","window","onscroll","debounce","innerHeight","document","documentElement","scrollHeight","scrollingElement","offsetHeight","concat","exact","path","className","for","type","onChange","e","target","to","Button","render","App","getElementById"],"mappings":"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","file":"static/js/main.89c90148.chunk.js","sourcesContent":["import React from 'react';\nimport Card from 'react-bootstrap/Card'\n\nexport default class Details extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.detailsInfo = this.props.data.filter((item) =>item.id.toString() === this.props.match.params.id \n)\n        this.data=this.detailsInfo[0]\n\n    }\n\n\n    render() {\n        return (\n            \n\n            <Card style={{ width: '28rem', margin: \"10px\", display: \"inline-block\" }}>\n\n                {this.data.url ? <Card.Img variant=\"top\" src={this.data.url} /> : <Card.Img variant=\"top\" src=\"https://www.superherodb.com/pictures2/portraits/10/100/1508.jpg\" />}\n                <Card.Body>\n                    <Card.Title>{this.data.name}</Card.Title>\n                    <Card.Text>\n                        {this.data[\"full-name\"]}\n                        <br></br>\n                        {this.data[\"place-of-birth\"]}\n                        <br></br>\n                        {this.data.publisher}\n\n                    </Card.Text>\n                    {/* <Button variant=\"primary\" >More Details</Button> */}\n                </Card.Body>\n            </Card> \n\n                     \n        );\n\n    }\n\n}\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport './card.css'\nimport Details from './details'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport debounce from \"lodash.debounce\";\n\nimport {\n  BrowserRouter as Router,\n  Link,\n  Switch,\n  Route\n\n} from \"react-router-dom\";\n\nimport { throttle } from \"lodash\";\nexport default function Carts() {\n  \n  const [value, setValue] = useState(\"\")\n  const [orignalActorArr, setorignalActorArr] = useState([])\n  const [loader, setloader] = useState(false)\n  const [cardsArr, setcardsArr] = useState([])\n  let results = []\n  \n  let actorArr = [];\n  let total;\n\n  const setResposneData = (data, start, end) => {\n    return data.splice(start, end);\n  }\n\n  useEffect(() => throttled.current(value), [value]);\n\n  const throttled = useRef(throttle((newValue) => {\n    if (newValue) {\n      getDataByFilter(newValue)\n    } else if (newValue === \"\") {\n      getDataByFilter(\"a\")\n    }\n\n  }, 3000));\n\n  function getDataByFilter(value) {\n\n\n    setloader(true)\n    if (localStorage.getItem(\"actors\") && value === \"a\") {\n      let result = JSON.parse(localStorage.getItem(\"actors\"))\n      setorignalActorArr(result)\n      setcardsArr(setResposneData(result, 0, 12))\n      setloader(false)\n      return\n    }\n\n    fetch('api/3070399882980494/search/' + value).then(function (response) {\n      return response.json().then(function (response) {\n\n        if (response.results && response.results.length > 0) {\n\n          results = response.results.map((item, i) => { return { ...item.image, ...item.biography, \"id\": i } });\n          //orignalActorArr = results;\n          setorignalActorArr(results)\n          total = results.length;\n          if (total > 12) {\n\n            actorArr = setResposneData(results, 0, 12)\n          } else {\n            actorArr = results\n          }\n          if (value === \"a\") {\n            localStorage.setItem(\"actors\", JSON.stringify(results))\n          }\n          setcardsArr(actorArr)\n          setloader(false)\n        }\n\n      })\n    });\n  }\n\n  window.onscroll = debounce(() => {\n\n\n    if (window.innerHeight + document.documentElement.scrollHeight >= document.scrollingElement.offsetHeight) {\n      // actorArr.concat(orignalActorArr.splice(actorArr.length, 12));\n      //var next = orignalActorArr.splice(0 ,24)\n\n      setcardsArr(cardsArr => cardsArr.concat(orignalActorArr.splice(actorArr.length, actorArr.length + 12)));\n    }\n\n  }, 100);\n\n\n\n  useEffect(() => { getDataByFilter(\"a\") }, []);\n\n\n\n  return (\n\n    <Router >\n\n\n\n      <Switch>\n        <Route exact path={`/`} >\n\n\n          <div className=\"form-group has-success has-feedback\" >\n            <label className=\"col-sm-2 control-label\" for=\"inputSuccess\">Search</label>\n            <div className=\"col-sm-12\">\n              <input type=\"text\" className=\"form-control\" id=\"inputSuccess\" onChange={(e) => setValue(e.target.value)} />\n              <span className=\"glyphicon glyphicon-ok form-control-feedback\"></span>\n            </div>\n\n            {!loader ? cardsArr.map((data) => {\n\n              return (\n                <Link to={`/${data[\"id\"]}`} params={data}><Card style={{ width: '18rem', margin: \"10px\", display: \"inline-block\" }}>\n\n                  {data.url ? <Card.Img variant=\"top\" src={data.url} /> : <Card.Img variant=\"top\" src=\"https://www.superherodb.com/pictures2/portraits/10/100/1508.jpg\" />}\n                  <Card.Body>\n                    <Card.Title>{data.name}</Card.Title>\n                    <Card.Text>\n                      {data[\"full-name\"]}\n                      <br></br>\n                      {data[\"place-of-birth\"]}\n                      <br></br>\n                      {data.publisher}\n\n                    </Card.Text>\n                    <Button variant=\"primary\" >More Details</Button>\n                  </Card.Body>\n                </Card>\n\n                </Link>)\n            }) : <div className=\"loader\"></div>}\n\n\n          </div>\n\n\n\n\n        </Route>\n\n        <Route exact path=\"/:id\" render={cardsArr.length > 0 ? (props) => <Details {...props} data={cardsArr} /> : \"\"} />\n\n\n      </Switch>\n\n\n    </Router>\n  )\n\n\n\n\n\n\n}","import React  from 'react';\nimport { render } from 'react-dom';\nimport './style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Cards from './ui-component/cards/Carts'\n\n\nexport default function App() {\n \n  \n  return (\n    \n      <Cards />  \n\n  )\n\n};\n\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}