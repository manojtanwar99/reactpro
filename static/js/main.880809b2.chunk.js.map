{"version":3,"sources":["ui-component/cards/details.js","ui-component/cards/Carts.js","index.js"],"names":["Details","props","detailsInfo","data","filter","item","id","toString","match","params","Card","style","width","margin","display","this","url","Img","variant","src","Body","Title","name","Text","publisher","React","Component","Carts","total","useState","orignalActorArr","setorignalActorArr","loader","setloader","cardsArr","setcardsArr","results","actorArr","setResposneData","start","end","splice","debounce","func","delay","debounceTimer","context","args","arguments","clearTimeout","setTimeout","apply","getDataByFilter","value","localStorage","getItem","result","JSON","parse","fetch","then","response","json","length","map","i","image","biography","setItem","stringify","useEffect","document","getElementById","addEventListener","e","target","window","onscroll","innerHeight","documentElement","scrollHeight","scrollingElement","offsetHeight","concat","exact","path","className","for","type","to","Button","render","App"],"mappings":"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","file":"static/js/main.880809b2.chunk.js","sourcesContent":["import React from 'react';\nimport Card from 'react-bootstrap/Card'\n\nexport default class Details extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.detailsInfo = this.props.data.filter((item) => item.id.toString() === this.props.match.params.id)\n        this.data = this.detailsInfo[0]\n\n    }\n\n\n    render() {\n        return (\n\n            <Card style={{ width: '28rem', margin: \"10px\", display: \"inline-block\" }}>\n\n                {this.data && this.data.url ? <Card.Img variant=\"top\" src={this.data.url} /> : <Card.Img variant=\"top\" src=\"https://www.superherodb.com/pictures2/portraits/10/100/1508.jpg\" />}\n                <Card.Body>\n                    <Card.Title>{this.data.name}</Card.Title>\n                    <Card.Text>\n                        {this.data[\"full-name\"]}\n                        <br></br>\n                        {this.data[\"place-of-birth\"]}\n                        <br></br>\n                        {this.data.publisher}\n\n                    </Card.Text>\n                  \n                </Card.Body>\n            </Card>\n\n\n        );\n\n    }\n\n}\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport './card.css'\nimport Details from './details'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\n\nimport {\n  BrowserRouter as Router,\n  Link,\n  Switch,\n  Route\n\n} from \"react-router-dom\";\n\nexport default function Carts() {\n\n  const [orignalActorArr, setorignalActorArr] = useState([])\n  const [loader, setloader] = useState(false)\n  const [cardsArr, setcardsArr] = useState([])\n  let results = []\n  let actorArr = [];\n  let total;\n\n  const setResposneData = (data, start, end) => {\n    return data.splice(start, end);\n  }\n\n\n  const debounce = (func, delay) => {\n    let debounceTimer\n    return function () {\n      const context = this\n      const args = arguments\n      clearTimeout(debounceTimer)\n      debounceTimer\n        = setTimeout(() => func.apply(context, args), delay)\n    }\n  }\n\n  useEffect(() => {\n    var inputField = document.getElementById(\"inputSuccessSeacrch\");\n    inputField.addEventListener('keydown', debounce(function (e) {\n      if (e && e.target && e.target.value) {\n        getDataByFilter(e.target.value)\n      } else {\n        getDataByFilter(\"a\")\n      }\n\n\n    }, 500))\n  }, []);\n\n\n\n\n  function getDataByFilter(value) {\n\n\n    setloader(true)\n    if (localStorage.getItem(\"actors\") && value === \"a\") {\n      let result = JSON.parse(localStorage.getItem(\"actors\"))\n      setorignalActorArr(result)\n      setcardsArr(setResposneData(result, 0, 12))\n      setloader(false)\n      return\n    }\n\n    fetch('https://cors-anywhere.herokuapp.com/https://superheroapi.com/api/3070399882980494/search/' + value).then(function (response) {\n      return response.json().then(function (response) {\n\n        if (response.results && response.results.length > 0) {\n\n          results = response.results.map((item, i) => { return { ...item.image, ...item.biography, \"id\": i } });\n          setorignalActorArr(results)\n          total = results.length;\n          if (total > 12) {\n            actorArr = setResposneData(results, 0, 12)\n          } else {\n            actorArr = results\n          }\n          if (value === \"a\") {\n            localStorage.setItem(\"actors\", JSON.stringify(results))\n          }\n          setcardsArr(actorArr)\n          setloader(false)\n        }\n\n      })\n    });\n  }\n\n  window.onscroll = debounce(() => {\n\n    if (window.innerHeight + document.documentElement.scrollHeight >= document.scrollingElement.offsetHeight) {\n      setcardsArr(cardsArr => cardsArr.concat(orignalActorArr.splice(actorArr.length, actorArr.length + 12)));\n    }\n  }, 100);\n\n\n\n  useEffect(() => { getDataByFilter(\"a\") }, []);\n\n\n\n  return (\n\n    <Router >\n      <Switch>\n        <Route exact path={`/reactpro`} >\n          <div className=\"form-group has-success has-feedback\" >\n            <label className=\"col-sm-2 control-label\" for=\"inputSuccess\">Search</label>\n            <div className=\"col-sm-12\">\n              <input type=\"text\" className=\"form-control\" id=\"inputSuccessSeacrch\" />\n              <span className=\"glyphicon glyphicon-ok form-control-feedback\"></span>\n            </div>\n            {!loader ? cardsArr.map((data) => {\n              return (\n                <Link to={`/reactpro/${data[\"id\"]}`} params={data}><Card style={{ width: '18rem', margin: \"10px\", display: \"inline-block\" }}>\n\n                  {data.url ? <Card.Img variant=\"top\" src={data.url} /> : <Card.Img variant=\"top\" src=\"https://www.superherodb.com/pictures2/portraits/10/100/1508.jpg\" />}\n                  <Card.Body>\n                    <Card.Title>{data.name}</Card.Title>\n                    <Card.Text>\n                      {data[\"full-name\"]}\n                      <br></br>\n                      {data[\"place-of-birth\"]}\n                      <br></br>\n                      {data.publisher}\n\n                    </Card.Text>\n                    <Button variant=\"primary\" >More Details</Button>\n                  </Card.Body>\n                </Card>\n\n                </Link>)\n            }) : <div className=\"loader\"></div>}\n          </div>\n        </Route>\n        <Route path=\"/reactpro/:id\" render={cardsArr.length > 0 ? (props) => <Details {...props} data={cardsArr} /> : \"\"} />\n      </Switch>\n    </Router>\n  )\n\n\n\n\n\n\n}","import React from 'react';\nimport { render } from 'react-dom';\nimport './style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Cards from './ui-component/cards/Carts'\n\n\nexport default function App() {\n\n  return <Cards />  \n\n};\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}